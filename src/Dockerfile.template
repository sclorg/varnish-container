{% import "src/macros.tpl" as macros with context %}
FROM {{ spec.s2i_base }}{% if spec.from_tag %}:{{ spec.from_tag }}{% endif %}

EXPOSE 8080
EXPOSE 8443

ENV SUMMARY="Platform for running Varnish or building Varnish-based application" \
    DESCRIPTION="Varnish available as container is a base platform for \
running Varnish server or building Varnish-based application. \
Varnish Cache stores web pages in memory so web servers don't have to create \
the same web page over and over again. Varnish Cache serves pages much faster \
than any application server; giving the website a significant speed up." \
{{ macros.env(config, spec) }} \
    VARNISH_VERSION={{ spec.version }}

LABEL summary="$SUMMARY" \
      description="$DESCRIPTION" \
      io.k8s.description="$DESCRIPTION" \
      io.k8s.display-name="Varnish {{ spec.version }}" \
      io.openshift.expose-services="8080:http,8443:https" \
{{ macros.labels(config, spec) }}
    {% if spec.org == "sclorg" %}
      version="1" \
    {% elif config.os.id == "rhel" and spec.prod != "rhel10" %}
      version="1" \
    {% endif %}
      usage="s2i build https://github.com/sclorg/varnish-container.git --context-dir={{ spec.version }}/test/test-app/ {{ spec.full_img_name }} sample-server" \
      name="{{ spec.img_name }}" \
      maintainer="Uhliarik Lubos <luhliari@redhat.com>"

RUN INSTALL_PKGS="{{ spec.install_pkgs }}" && \
    {% if spec.repo_setup %}
    {{ spec.repo_setup }}
    {% endif %}
    {{ commands.pkginstaller.install([], {'docs': False}) }} $INSTALL_PKGS && \
    rpm -V $INSTALL_PKGS && \
    {% if config.os.id == "fedora" or spec.prod == "rhel8" or spec.prod == "rhel9" or spec.prod == "rhel10" or spec.prod == "c9s" or spec.prod == "c10s" %}
    fix-permissions $VARNISH_CONFIGURATION_PATH && \
    fix-permissions /var/lib/varnish && \
    varnishd -V 2>&1 | grep -qe "varnish-$VARNISH_VERSION\." && echo "Found VERSION $VARNISH_VERSION" && \
    {% endif %}
    rm -f /etc/profile.d/lang.sh && \
    rm -f /etc/profile.d/lang.csh && \
    {{ commands.pkginstaller.cleancache() }}

# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH
COPY {{ spec.version }}/s2i/bin/ $STI_SCRIPTS_PATH

# Copy extra files to the image.
COPY {{ spec.version }}/root/ /

RUN chmod -R a+rwx ${APP_ROOT}/etc && \
    chown -R 1001:0 ${APP_ROOT}
# Reset permissions of filesystem to default values
RUN rpm-file-permissions

USER 1001

CMD $STI_SCRIPTS_PATH/usage
