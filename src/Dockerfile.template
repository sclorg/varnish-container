{% import "src/macros.tpl" as macros with context %}
FROM {{ spec.s2i_base}}{% if spec.from_tag %}:{{ spec.from_tag }}{% endif %}

{% if config.os.id != "fedora" %}
# RHSCL rh-varnish{{ spec.version }} image.
{% endif %}

EXPOSE 8080
EXPOSE 8443

ENV SUMMARY="Platform for running Varnish or building Varnish-based application" \
    DESCRIPTION="Varnish available as container is a base platform for \
running Varnish server or building Varnish-based application. \
Varnish Cache stores web pages in memory so web servers don't have to create \
the same web page over and over again. Varnish Cache serves pages much faster \
than any application server; giving the website a significant speed up." \
{{ macros.env(config, spec) }}

LABEL summary="$SUMMARY" \
      description="$DESCRIPTION" \
      io.k8s.description="$DESCRIPTION" \
      io.k8s.display-name="Varnish {{ spec.version }}" \
      io.openshift.expose-services="8080:http,8443:https" \
{{ macros.labels(config, spec) }}
      name="{{ spec.img_name }}" \
      maintainer="SoftwareCollections.org <sclorg@redhat.com>"

RUN INSTALL_PKGS="{{ spec.install_pkgs }}" && \
    {% if spec.repo_setup %}
    {{ spec.repo_setup }}
    {% endif %}
    {% if spec.staging and spec.staging_repo_setup %}
    {{ spec.staging_repo_setup }}
    {% endif %}
    {{ commands.pkginstaller.install([], {'docs': False}) }} $INSTALL_PKGS && \
    rpm -V $INSTALL_PKGS && \
    {% if config.os.id == "fedora" %}
    fix-permissions $VARNISH_CONFIGURATION_PATH && \
    fix-permissions /var/lib/varnish && \
    {% endif %}
    rm -f /etc/profile.d/lang.sh && \
    rm -f /etc/profile.d/lang.csh && \
    {{ commands.pkginstaller.cleancache() }}

# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH
COPY {{ spec.version }}/s2i/bin/ $STI_SCRIPTS_PATH

# Copy extra files to the image.
COPY {{ spec.version }}/root/ /

{% if config.os.id != "fedora" %}
# In order to drop the root user, we have to make some directories world
# writeable as OpenShift default security model is to run the container under
# random UID.
RUN chmod -R a+rwx ${APP_ROOT}/etc && \
    chmod -R a+rwx /var/opt/rh/rh-varnish{{ spec.version }} && \
    chmod -R a+rwx /etc/opt/rh/rh-varnish{{ spec.version }} && \
    chown -R 1001:0 ${APP_ROOT} && \
    chown -R 1001:0 /var/opt/rh/rh-varnish{{ spec.version }} && \
    chown -R 1001:0 /etc/opt/rh/rh-varnish{{ spec.version }}
{% endif %}
# Reset permissions of filesystem to default values
RUN rpm-file-permissions

USER 1001

{% if config.os.id != "fedora" %}
# VOLUME ["/etc/opt/rh/rh-varnish{{ spec.version }}/varnish"]

ENV BASH_ENV=${APP_ROOT}/etc/scl_enable \
    ENV=${APP_ROOT}/etc/scl_enable \
    PROMPT_COMMAND=". ${APP_ROOT}/etc/scl_enable"
{% endif %}
CMD $STI_SCRIPTS_PATH/usage
